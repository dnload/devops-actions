name: Commit Message Checker
description: Check commit message convention

inputs:
  commit_message_pattern:
    description: "Commit message pattern"
    required: true
  etc_pattern:
    description: "Etc pattern"
    required: true
  pull_request_url:
    description: "Pull request URL"
    required: true
  token:
    description: "GitHub token"
    required: true


runs:
  using: "composite"
  steps:
    - name: Commit message check
      shell: bash
      run: |
        echo "Fetching PR commits..."
        PR_COMMITS_URL="${{ inputs.pull_request_url }}"
        echo "Commits URL: $PR_COMMITS_URL"
        
        RESPONSE=$(curl -s -H "Authorization: token ${{ inputs.token }}" $PR_COMMITS_URL)
        if ! echo "$RESPONSE" | jq empty; then
          echo "Error: Invalid JSON response from GitHub API"
          echo "Response: $RESPONSE"
          exit 1
        fi
        
        echo "$RESPONSE" | jq -r '.[].commit.message | split("\n")[0]' | while read commit_message; do
          [ -z "$commit_message" ] && continue
          
          echo "Checking commit message: $commit_message"
          if ! echo "$commit_message" | grep -Eq "${{ inputs.commit_message_pattern }}"; then
            if ! echo "$commit_message" | grep -Eq "${{ inputs.etc_pattern }}"; then
              echo "Commit message does not match the required format."
              echo "$commit_message"
              exit 1
            fi
          fi
        done
        echo "All commit messages match the required format."